let isEnabled = true;

// –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏–∑ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
chrome.storage.sync.get(['enabled'], function(result) {
  isEnabled = result.enabled !== undefined ? result.enabled : true;
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤
chrome.webRequest.onBeforeSendHeaders.addListener(
  function(details) {
    if (!isEnabled) return;
    
    const protectedText = "–ó–∞—â–∏—â–µ–Ω–æ Samoilik Protect üõ°Ô∏è";
    
    for (let i = 0; i < details.requestHeaders.length; i++) {
      if (details.requestHeaders[i].name.toLowerCase() === 'x-forwarded-for') {
        details.requestHeaders[i].value = protectedText;
        return { requestHeaders: details.requestHeaders };
      }
      if (details.requestHeaders[i].name.toLowerCase() === 'x-real-ip') {
        details.requestHeaders[i].value = protectedText;
        return { requestHeaders: details.requestHeaders };
      }
    }
    
    details.requestHeaders.push({
      name: 'X-Forwarded-For',
      value: protectedText
    });
    
    return { requestHeaders: details.requestHeaders };
  },
  { urls: ["<all_urls>"] },
  ["blocking", "requestHeaders"]
);

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç popup
chrome.runtime.onMessage.addListener(function(request, sender, sendResponse) {
  if (request.action === "toggle") {
    isEnabled = request.value;
    chrome.storage.sync.set({enabled: isEnabled});
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –≤—Å–µ –∞–∫—Ç–∏–≤–Ω—ã–µ –≤–∫–ª–∞–¥–∫–∏
    chrome.tabs.query({}, function(tabs) {
      tabs.forEach(tab => {
        chrome.tabs.sendMessage(tab.id, {action: "toggle", value: isEnabled});
      });
    });
    
    sendResponse({status: "success"});
  }
  else if (request.action === "getStatus") {
    sendResponse({enabled: isEnabled});
  }
  return true;
});